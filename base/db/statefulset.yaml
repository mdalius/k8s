apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: production
spec:
  serviceName: "db"
  replicas: 2
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      volumes:
        - name: conf
          emptyDir: {}
        - name: data
          emptyDir: {}
      initContainers:
        - name: init
          image: ghcr.io/voxoco/innodb-cluster:latest
          command: ["bash", "/init.sh"]
          env:
            - name: TZ
              value: America/Chicago
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-details
                  key: clusterName
            - name: MYSQLSERVERID
              valueFrom:
                configMapKeyRef:
                  name: cluster-details
                  key: serverId
            - name: PODIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: INNODB_BUFFER_SIZE
              value: 3G
          volumeMounts:
            - name: conf
              mountPath: /mnt/conf.d
      terminationGracePeriodSeconds: 10
      containers:
        - name: mysqld-exporter
          image: prom/mysqld-exporter
          resources:
            requests:
              cpu: 10m
          env:
            - name: DATA_SOURCE_NAME
              value: mysqld-exporter:123456@(127.0.0.1:3306)/
          ports:
            - name: metrics
              containerPort: 9104
          args:
            - --no-collect.info_schema.innodb_cmpmem
            - --no-collect.global_variables
            - --no-collect.info_schema.innodb_metrics
            - --no-collect.info_schema.query_response_time
          imagePullPolicy: Always
        - name: sidecar
          image: ghcr.io/voxoco/innodb-cluster:latest
          command: ["bash", "/sidecar.sh"]
          resources:
            requests:
              cpu: 30m
          env:
            - name: TZ
              value: America/Chicago
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: accessKey
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: secretAccessKey
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root-pw
                  key: pw
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: cluster-details
                  key: clusterName
            - name: BACKUP_INTERVAL
              value: "43200"
            - name: S3_DIRECTORY
              value: innodb-cluster
            - name: PODIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REGIONS
              value: us-west1 us-west2 us-west3 us-west4 us-central1 us-east1 us-east4 us-east5 us-south1
          volumeMounts:
            - name: data
              mountPath: /mnt/data/mysql
          imagePullPolicy: Always
        - name: mysql
          image: ghcr.io/voxoco/innodb-cluster:latest
          resources:
            requests:
              cpu: 1000m
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root-pw
                  key: pw
            - name: MYSQL_ROOT_HOST
              value: '%'
            - name: TZ
              value: America/Chicago
            - name: PODIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: conf
              mountPath: /etc/mysql
            - name: data
              mountPath: /var/lib/mysql
          livenessProbe:
            timeoutSeconds: 5
            exec:
              command: ["bash", "-c", "mysql -u root -p$MYSQL_ROOT_PASSWORD -h 127.0.0.1 -s -N -e 'select member_state from performance_schema.replication_group_members where member_id=@@server_uuid;' 2>/dev/null | egrep -v 'ERROR|OFFLINE' && mysql -u root -p$MYSQL_ROOT_PASSWORD -h 127.0.0.1 -s -N -e 'select @@global.super_read_only;' 2>/dev/null | egrep -v 1"]
          startupProbe:
            timeoutSeconds: 5
            failureThreshold: 20
            exec:
              command: ["bash", "-c", "test -f '/var/lib/mysql/ready.txt'"]
          lifecycle:
            preStop:
              exec:
                command: ["bash", "-c", "mysqlsh -u root -h 127.0.0.1 -p$MYSQL_ROOT_PASSWORD -- cluster remove-instance $PODIP:3306 --force=true --interactive=false"]
          imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
